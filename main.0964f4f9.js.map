{"version":3,"sources":["scripts/main.js"],"names":["container","document","querySelector","table","rows","children","addRow","removeRow","addColumn","removeColumn","addEventListener","e","item","target","newRow","cloneNode","append","lastChild","remove","forEach","row","newCell","maxElements","rowsNumber","length","columsNumber","disabled"],"mappings":";AAAA,aAWA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EATA,IAAMA,EAAYC,SAASC,cAAc,cACrCC,EAAQF,SAASC,cAAc,SAC7BE,EAAOD,EAAME,SAEbC,EAASN,EAAUE,cAAc,eACjCK,EAAYP,EAAUE,cAAc,eACpCM,EAAYR,EAAUE,cAAc,kBACpCO,EAAeT,EAAUE,cAAc,kBAE7CF,EAAUU,iBAAiB,QAAS,SAACC,GAG3BC,OAFKD,EAAEE,QAGRP,KAAAA,EACGQ,IAAAA,EAASV,EAAK,GAAGW,WAAU,GAEjCZ,EAAMa,OAAOF,GACb,MAEGP,KAAAA,EACHJ,EAAMc,UAAUC,SAChB,MAEGV,KAAAA,EACCJ,EAAAA,GAAMe,QAAQ,SAAAC,GACVC,IAAAA,EAAUjB,EAAK,GAAGF,cAAc,MAAMa,WAAU,GAEtDK,EAAIJ,OAAOK,KAEb,MAEGZ,KAAAA,EACCL,EAAAA,GAAMe,QAAQ,SAAAC,GAChBA,EAAIH,UAAUC,WAEhB,MAEF,QACEf,EAAQF,SAASC,cAAc,SAG7BoB,IAEAC,EAAanB,EAAKoB,OAClBC,EAAerB,EAAK,GAAGC,SAASmB,OAElCD,GALgB,GAMlBjB,EAAOoB,UAAW,EACTpB,EAAOoB,UAAYH,EAPV,KAQlBjB,EAAOoB,UAAW,GAGhBH,GAVgB,EAWlBhB,EAAUmB,UAAW,EACZnB,EAAUmB,UAAYH,GAZb,IAalBhB,EAAUmB,UAAW,GAGnBD,GAjBgB,GAkBlBjB,EAAUkB,UAAW,EACZlB,EAAUkB,UAAYD,GAnBb,KAoBlBjB,EAAUkB,UAAW,GAGnBD,GAtBgB,EAuBlBhB,EAAaiB,UAAW,EACfjB,EAAaiB,UAAYD,GAxBhB,IAyBlBhB,EAAaiB,UAAW","file":"main.0964f4f9.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst container = document.querySelector('.container');\nlet table = document.querySelector('tbody');\nconst rows = table.children;\n\nconst addRow = container.querySelector('.append-row');\nconst removeRow = container.querySelector('.remove-row');\nconst addColumn = container.querySelector('.append-column');\nconst removeColumn = container.querySelector('.remove-column');\n\ncontainer.addEventListener('click', (e) => {\n  const item = e.target;\n\n  switch (item) {\n    case addRow:\n      const newRow = rows[0].cloneNode(true);\n\n      table.append(newRow);\n      break;\n\n    case removeRow:\n      table.lastChild.remove();\n      break;\n\n    case addColumn:\n      [...rows].forEach(row => {\n        const newCell = rows[0].querySelector('td').cloneNode(true);\n\n        row.append(newCell);\n      });\n      break;\n\n    case removeColumn:\n      [...rows].forEach(row => {\n        row.lastChild.remove();\n      });\n      break;\n\n    default:\n      table = document.querySelector('tbody');\n  }\n\n  const maxElements = 10;\n  const minElements = 2;\n  const rowsNumber = rows.length;\n  const columsNumber = rows[0].children.length;\n\n  if (rowsNumber >= maxElements) {\n    addRow.disabled = true;\n  } else if (addRow.disabled && rowsNumber < maxElements) {\n    addRow.disabled = false;\n  }\n\n  if (rowsNumber <= minElements) {\n    removeRow.disabled = true;\n  } else if (removeRow.disabled && rowsNumber >= minElements) {\n    removeRow.disabled = false;\n  }\n\n  if (columsNumber >= maxElements) {\n    addColumn.disabled = true;\n  } else if (addColumn.disabled && columsNumber <= maxElements) {\n    addColumn.disabled = false;\n  }\n\n  if (columsNumber <= minElements) {\n    removeColumn.disabled = true;\n  } else if (removeColumn.disabled && columsNumber >= minElements) {\n    removeColumn.disabled = false;\n  }\n});\n"]}